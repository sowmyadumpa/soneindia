<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />

<title>Chris Richardson - Biography - SpringOne 2GX</title>

    <!-- // speaker_view.jsp -->

	<meta name="robots" content="all" />

<meta name="description" content="SpringOne 2GX"/>
<meta name="keywords" content="SpringOne 2GX, SpringOne Americas, The Spring Experience, Spring Framework Conference, Spring Conference, Grails Conference, Groovy Conference"/>
<link href="/assets/spring-stylesheet-3.1.52.css" rel="stylesheet" type="text/css" />

    <link  href="/assets/print.css" rel="stylesheet" type="text/css" media="print" />

<!--[if IE]>
  		<script src="/script/html5.js"></script>
		<link href="/styles/theme/ie-spring.css" rel="stylesheet" />
<![endif]-->

<link href="../images/favicon/spring.ico" rel="SHORTCUT ICON"/>
<link href="../s/rss/spring.xml" rel="alternate" type="application/rss+xml" title="SpringOne 2GX"/><script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-361385-13']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>

</head>
<body>

<div id="view-wrapper">

<div id="wrapper">
	
	<div id="hdr">
	  <div class="nav-wrapper">
      <div class="nav left"> <a class="home1" href="<%= index_path%>"> <img src="/assets/spring2012/NavHome.png" alt="HOME"/></a>
            <div class="drop-down agenda"> <a class="drop-down-button" href="/agenda.htm">Agenda </a> <br class="clear" />
              <div class="menu-wrapper">
                <div class="menu">
                  <h3><a href="schedule.htm">Schedule</a></h3>
                  <a href="springone/event_schedule.htm">SpringOne</a> <a href="2gx/event_schedule.htm">Groovy & Grails</a>
                  <h3><a href="sessions.htm">Sessions</a></h3>
                  <a href="springone/event_sessions.htm">SpringOne</a> <a href="2gx/event_sessions.htm">Groovy & Grails</a></div>
                <!-- // menu -->
              </div>
              <!-- // menu-wrapper -->
            </div>
            <div class="drop-down speakers"> <a class="drop-down-button" href="/speakerlist.htm">Speakers </a> <br class="clear" />
              <div class="menu-wrapper">
                <div class="menu">
                  <h3><a href="speakers.htm">S2GX Speakers</a></h3>
                  <a href="springone/event_speakers.htm">SpringOne</a> <a href="2gx/event_speakers.htm">Groovy & Grails</a></div>
                <!-- // menu -->
              </div>
              <!-- // menu-wrapper -->
            </div>
            <a class="travel" href="venue.htm">VENUE</a> <br class="clear" />
          </div>
          <div class="nav right"><a class="register" href="/register.htm"> <img src="/assets/spring2012/NavBtn_Register.png" alt="Register"/></a> <br class="clear" />
          </div>
          <br class="clear" />
          <!-- // nav-wrapper -->
        </div>
        <br class="clear" />
</div>

<div id="container">

		<div id="title-bar">

    <h1>SPRINGONE 2GX 2012: THE SPRING, GROOVY, GRAILS, & CLOUD EVENT OF THE YEAR!</h1>

    <br class="clear" />
</div><!-- CONTENT SECTION -->
        <div id="content">
	
	        <div id="speakerBio">

<h1>Chris Richardson</h1>



<div class="intro">

<h2>Author of POJOs in Action</h2>

    <div class="image">


        <img class="speaker" src="/assets/bio/985_Richardson_20110412_144005_medium.jpg" alt="Chris Richardson"/>

        <br class="clear" />
    </div>

    <div class="bio">

        <p>Chris Richardson is a developer and architect with over 20 years of experience. He is a Java Champion and the author of POJOs in Action, which describes how to build enterprise Java applications with POJOs and frameworks such as Spring and Hibernate. Chris is the founder of CloudFoundry.com and works on cloud technology. He has a computer science degree from the University of Cambridge in England and lives in Oakland, CA with his wife and three children.</p><br class="clear" />
    </div>


    <br class="clear" />
</div>

<div class="speakerContent">

<div class="presentationsLong">

    <h2>Presentations</h2>


    <h3><a href="../../topics/deploying_a_grails_application_on_amazon_ec2_with_cloud_tools.htm">Deploying a Grails Application on Amazon EC2 with Cloud Tools</a></h3>

		<p>TBD</p>
<p>TBD</p>
<h3><a href="../../topics/developing_with_amazon_web_services.htm">Developing with Amazon Web Services</a></h3>

		<p>The Amazon Elastic Compute Cloud (EC2) is probably the best known web service from Amazon but itâs not the only one. There are other highly scalable and reliable web services that you can use in your Grails applications including the Simple Storage Service (S3), Simple Queuing Service (SQS) and SimpleDB, a non-relational database. Although, using these web services couples your application to Amazon, they let you build highly scalable applications without the pain and cost of having to develop your own infrastructure.</p>
<p>In this session you will learn how to use these web services. We describe the various open-source Java libraries for interacting these web services including JetS3t and Typica and how to integrate them into your Grails development model. You will learn about the benefits and drawbacks of these web services and their typical uses cases.</p>
<h3><a href="../../topics/running_java_and_grails_applications_on_the_amazon_elastic_compute_cloud.htm">Running Java and Grails applications on the Amazon Elastic Compute Cloud</a></h3>

		<p>The Amazon Elastic Compute Cloud (EC2) is ideally suited to running Java applications. It lets you develop using standard Java software packages such as Tomcat and MySQL and rapidly deploy applications on servers that are provisioned and managed via a web services API. And, with its pay as you go pricing model, Amazon EC2 enables startups to launch their application without any upfront investment in computer hardware and allows enterprises to reduce costs and become more agile.</p>

<p>However, because it is a cloud, some aspects of Amazon EC2 are very different than a traditional, physical computing environment. In this session you will learn about those differences and how they impact how you handle security, networking, storage and availability. We describe how to use EC2 and the other Amazon web services to develop and deploy Java applications. You will learn how to use EC2 availability zones to deploy highly available applications. We also discuss how to architect secure applications for Amazon EC2.</p>
<p>Session Detail</p>
<h3><a href="../../topics/polyglot_persistence_for_java_developers___moving_out_of_the_relational_comfort_zone.htm">Polyglot persistence for Java developers - moving out of the relational comfort zone</a></h3>

		<p>Relational databases have long been considered the one true way to persist enterprise data. But today, NoSQL databases are emerging as a viable alternative for many applications. They can simplify the persistence of complex data models and offer significantly better scalability, and performance. But using NoSQL databases is very different than the ACID/SQL/JDBC/JPA world that we have become ccustomed to. They have different and unfamiliar APIs and a very different and usually limited transaction model. In this presentation, we describe describe some popular NoSQL databases - SimpleDB, MongoDB, and Cassandra. You will learn about each database's data model and Java API. We describe the benefits and drawbacks with using NoSQL databases. Finally, you will learn how to build Java applications that use NoSQL databases in conjunction with an RDBMS. </p>
<p>Session Detail</p>
<h3><a href="../../topics/developing_java_applications_with_cloud_services.htm">Developing Java applications with Cloud Services</a></h3>

		<p>Cloud computing isn't just about application deployment. There is also a growing number of cloud-based web services that you can use to develop your application. One of the most well known is Amazon's Simple Storage Service. But there are many others including web services for messaging, relational and NoSQL databases, email and telephony. Using these services allows you to build highly scalable applications without the pain and cost of having to develop and operate your own infrastructure. In this presentation, you will learn how to use some of these web services. We will describe the Java libraries for interacting with them. You will learn about the benefits and drawbacks of these Web services and their typical use cases. We will describe an example application that is built using cloud services. </p>
<p>Session Details</p>
<h3><a href="../../topics/using_spring_with_non_relational_databases.htm">Using Spring with non-relational databases</a></h3>

		<p>The needs of many enterprises have stretched traditional RDBMS based solutions to the breaking point and as a result, a plethora of new non-relational storage options have appeared. In this talk your learn about some popular NoSQL database including Redis, Cassandra and MongoDB. We show how the Spring Framework is evolving to support non relational ('NoSQL') databases by bringing traditional Spring values such as portability, productivity and a unified POJO based programming model to this style of data access. </p>
<p>Session Detail</p>
<h3><a href="../../topics/private_or_public___developing_applications_for_the_cloud.htm">Private or Public - Developing Applications for the Cloud</a></h3>

		<p>Most people agree that the future of computing is in the cloud.  However, what does that imply about how you develop or migrate existing applications to the new environment?  Leveraging the lightweight and portable Spring framework appears to be a requirement to creating such applications.  However, is that enough?  Furthermore, is the cloud of the future in your private data center or in the public infrastructure?  Will nirvana be achieved when we create the hybrid cloud to capture the best of both private and public clouds?  Please join us as we walk through the evolution and the scenarios of various IaaS, PaaS, and future technologies yet to be made available.</p>
<p>Session Detail</p>
<h3><a href="../../topics/polyglot_persistence_for_java_developers___moving_out_of_the_relational_comfort_zone_1.htm">Polyglot Persistence for Java Developers - Moving Out of the Relational Comfort Zone</a></h3>

		<p>Relational databases have long been considered the one true way to persist enterprise data. But today, NoSQL databases are emerging as a viable alternative for many applications. They can simplify the persistence of complex data models and offer significantly better scalability, and performance. But using NoSQL databases is very different than the ACID/SQL/JDBC/JPA world that we have become accustomed to. They have different and unfamiliar APIs and a very different and usually limited transaction model. In this presentation, we describe some popular NoSQL databases – Redis, and MongoDB. You will learn about each database’s data model and Java API. We describe the benefits and drawbacks with using NoSQL databases. Finally, you will learn how the Spring Data project simplifies the development of Java applications that use NoSQL databases.</p>
<p>Session Detail</p>
<h3><a href="../../topics/case_study__extending_extensible_web_services_using_spring_and_other_goodies.htm">Case Study: Extending extensible web services using Spring and other goodies</a></h3>

		<p>Let’s imagine that you were asked to extend a web service without modifying the original implementation. How would you do that? And, what does it mean for a Web service to be extensible anyway? We answer these and other questions in this presentation where we describe a novel, proxy server-based approach for extending REST and SOAP APIs without having to modify the initial implementation. You will learn about the REST maturity model and what it means for a web service to be extensible. We describe how we built the proxy server using technologies such as the Spring framework, the Roo shell and Spring Data for Redis.</p>
<p>Session Detail</p>
<h3><a href="../../topics/decomposing_applications_for_deployability_and_scalability.htm">Decomposing Applications for Deployability and Scalability</a></h3>

		<p>Today, there are several trends that are forcing application architectures to evolve. Users expect a rich, interactive and dynamic user experience on a wide variety of clients including mobile devices. Applications must be highly scalable, highly available and run on cloud environments. Organizations often want to frequently roll out updates, even multiple times a day. Consequently, it’s no longer adequate to develop simple, monolithic web applications that serve up HTML to desktop browsers.</p>
<p>In this talk we describe the limitations of a monolithic architecture. You will learn how to use the scale cube to decompose your application into a set of narrowly focused, independently deployable back-end services and an HTML 5 client. We will also discuss the role of technologies such as NodeJS and AMQP brokers. You will learn how a modern PaaS such as Cloud Foundry simplifies the development and deployment of this style of application.</p>
<br class="clear" />
</div><!--/ books -->


<br class="clear" />
</div>


</div> <!-- // speakerPage --><hr class="clear"/> <!-- // content -->
            </div>

            <hr class="clear"/>  <!-- // container -->
        </div>


<!-- FOOTER -->
    <div id="ftr">
        <ul>
            <li><a href="../../home/about.htm">About</a></li>
            <li><a href="../../home/feedback.htm">Contact Us</a></li>
            <li><a href="../../mobile/index.htm">Mobile</a></li>
            <li class="last"><a href="../../home/sitemap.htm">Site Map</a></li>
        </ul><br />
        <ul>
            <li class="last"><strong>NFJS SITES:</strong></li>
            <li><a href="http://www.nofluffjuststuff.com/">No Fluff Just Stuff</a></li>
            <li><a href="http://uberconf.com/">Uber Conf</a></li>
            <li><a href="http://www.nfjsone.com/">NFJS One</a></li>
            <li><a href="http://www.springone2gx.com/">SpringOne 2GX</a></li>
            <li><a href="http://www.therichwebexperience.com/">Rich Web Experience</a></li>
            <li class="last"><a href="http://continuousdeliveryexperience.com/">Continuous Delivery Experience</a></li>
        </ul><br />
        <ul>
            <li class="last"><strong>SPRINGSOURCE SITES:</strong></li>
            <li><a href="http://www.springsource.com/">Springsource.com</a></li>
            <li class="last"><a href="http://springsource.org/">Springsource.org</a></li>
        </ul>
        <div class="copyright">
        &copy; 2012 SpringSource, by VMWare &amp; No Fluff, Just Stuff <sup>TM</sup>.  All rights reserved. Java is a registered trademark of Oracle.
        </div>
    </div>

<script type="text/javascript" src="/assets/m/common-3.1.52.js"></script>
        <script type="text/javascript">

    
    nfjs.user.https_signout();
    spring.menu.observe();</script>




</div>   <!-- // wrapper -->

</div> <!-- // view-wrapper -->

</body>
</html>


